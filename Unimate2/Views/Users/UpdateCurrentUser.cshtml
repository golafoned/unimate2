@model UniMate2.Models.DTO.UpdateUserDto
@using UniMate2.Models.Domain.Enums

@{
    ViewData["Title"] = "Complete Your Profile";
}

<div class="w-full max-w-2xl mx-auto bg-white rounded-xl shadow-xl p-6 md:p-10 border border-gray-100">
    <h1 class="text-2xl md:text-3xl font-bold text-center text-gray-800 mb-2">Complete Your Profile</h1>
    <p class="text-center text-gray-500 mb-8">Tell us more about yourself to get personalized matches.</p>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-50 text-green-700 p-3 rounded-lg mb-4">
            @TempData["SuccessMessage"]
        </div>
    }
    
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-50 text-red-700 p-3 rounded-lg mb-4">
            @TempData["ErrorMessage"]
        </div>
    }

    <div class="mb-8">
        <div class="progress-bar-bg w-full">
            <div id="progress-bar" class="progress-bar-fill" style="width: 20%;"></div>
        </div>
        <p id="step-indicator" class="text-sm text-center text-gray-500 mt-2">Step 1 of 5</p>
    </div>

    <form id="profile-form" asp-controller="Users" asp-action="UpdateCurrentUser" method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-red-500 text-sm mb-4 p-3 bg-red-50 rounded-lg" role="alert"></div>
        
        <!-- Step 1: Basic Information -->
        <div id="step-1" class="step">
            <h2 class="text-xl font-semibold text-gray-700 mb-6">Basic Information</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div>
                    <label asp-for="FirstName" class="block text-sm font-medium text-gray-700 mb-1">First Name</label>
                    <input asp-for="FirstName" required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3" placeholder="Jane">
                    <span asp-validation-for="FirstName" class="text-xs text-red-500"></span>
                </div>
                <div>
                    <label asp-for="LastName" class="block text-sm font-medium text-gray-700 mb-1">Last Name</label>
                    <input asp-for="LastName" required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3" placeholder="Doe">
                    <span asp-validation-for="LastName" class="text-xs text-red-500"></span>
                </div>
            </div>
            <div class="mb-4">
                <label asp-for="BirthDate" class="block text-sm font-medium text-gray-700 mb-1">Birth Date</label>
                <input asp-for="BirthDate" type="date" required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3">
                <span asp-validation-for="BirthDate" class="text-xs text-red-500"></span>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div>
                    <label asp-for="Gender" class="block text-sm font-medium text-gray-700 mb-1">Gender</label>
                    <select asp-for="Gender" asp-items="Html.GetEnumSelectList<Gender>()" required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3">
                        <option value="" disabled selected>Select...</option>
                    </select>
                    <span asp-validation-for="Gender" class="text-xs text-red-500"></span>
                </div>
                <div>
                    <label asp-for="Orientation" class="block text-sm font-medium text-gray-700 mb-1">Orientation</label>
                    <select asp-for="Orientation" asp-items="Html.GetEnumSelectList<Orientation>()" required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3">
                        <option value="" disabled selected>Select...</option>
                    </select>
                    <span asp-validation-for="Orientation" class="text-xs text-red-500"></span>
                </div>
            </div>
        </div>

        <!-- Step 2: Academic & Languages -->
        <div id="step-2" class="step hidden-step">
            <h2 class="text-xl font-semibold text-gray-700 mb-6">Academic & Languages</h2>
            <div class="mb-4">
                <label asp-for="University" class="block text-sm font-medium text-gray-700 mb-1">University</label>
                <input asp-for="University" required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3" placeholder="Example University">
                <span asp-validation-for="University" class="text-xs text-red-500"></span>
            </div>
            <div class="mb-4">
                <label asp-for="Faculty" class="block text-sm font-medium text-gray-700 mb-1">Faculty / Department</label>
                <input asp-for="Faculty" required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3" placeholder="e.g., Computer Science">
                <span asp-validation-for="Faculty" class="text-xs text-red-500"></span>
            </div>
            <div class="mb-4">
                <label for="languages" class="block text-sm font-medium text-gray-700 mb-1">Languages Spoken</label>
                <select id="languages" name="Languages" multiple required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3">
                    <option value="English">English</option>
                    <option value="Mandarin">Mandarin</option>
                    <option value="Hindi">Hindi</option>
                    <option value="Spanish">Spanish</option>
                    <option value="French">French</option>
                    <option value="Arabic">Arabic</option>
                    <option value="Ukrainian">Ukrainian</option>
                    <option value="Portuguese">Portuguese</option>
                    <option value="Indonesian">Indonesian</option>
                    <option value="German">German</option>
                    <option value="Japanese">Japanese</option>
                    <option value="Turkish">Turkish</option>
                    <option value="Korean">Korean</option>
                </select>
                <p class="text-xs text-gray-500 mt-1">Hold Ctrl/Cmd to select multiple.</p>
            </div>
        </div>

        <!-- Step 3: Lifestyle & Intentions -->
        <div id="step-3" class="step hidden-step">
            <h2 class="text-xl font-semibold text-gray-700 mb-6">Lifestyle & Intentions</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div>
                    <label asp-for="IsSmoking" class="block text-sm font-medium text-gray-700 mb-1">Do you smoke?</label>
                    <select asp-for="IsSmoking" asp-items="Html.GetEnumSelectList<AddictionStatus>()" required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3">
                        <option value="" disabled selected>Select...</option>
                    </select>
                    <span asp-validation-for="IsSmoking" class="text-xs text-red-500"></span>
                </div>
                <div>
                    <label asp-for="IsDrinking" class="block text-sm font-medium text-gray-700 mb-1">Do you drink alcohol?</label>
                    <select asp-for="IsDrinking" asp-items="Html.GetEnumSelectList<AddictionStatus>()" required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3">
                        <option value="" disabled selected>Select...</option>
                    </select>
                    <span asp-validation-for="IsDrinking" class="text-xs text-red-500"></span>
                </div>
            </div>
            <div class="mb-4">
                <label asp-for="LookingFor" class="block text-sm font-medium text-gray-700 mb-1">What are you looking for?</label>
                <select asp-for="LookingFor" asp-items="Html.GetEnumSelectList<LookingForEnum>()" required class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3">
                    <option value="" disabled selected>Select...</option>
                </select>
                <span asp-validation-for="LookingFor" class="text-xs text-red-500"></span>
            </div>
        </div>

        <!-- Step 4: About You -->
        <div id="step-4" class="step hidden-step">
            <h2 class="text-xl font-semibold text-gray-700 mb-6">About You</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div>
                    <label asp-for="PersonalityType" class="block text-sm font-medium text-gray-700 mb-1">Personality Type (MBTI)</label>
                    <select asp-for="PersonalityType" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3">
                        <option value="" disabled selected>Select (Optional)...</option>
                        <option value="ISTJ">ISTJ (Inspector)</option>
                        <option value="ISFJ">ISFJ (Protector)</option>
                        <option value="INFJ">INFJ (Counselor)</option>
                        <option value="INTJ">INTJ (Mastermind)</option>
                        <option value="ISTP">ISTP (Craftsman)</option>
                        <option value="ISFP">ISFP (Composer)</option>
                        <option value="INFP">INFP (Healer)</option>
                        <option value="INTP">INTP (Architect)</option>
                        <option value="ESTP">ESTP (Dynamo)</option>
                        <option value="ESFP">ESFP (Performer)</option>
                        <option value="ENFP">ENFP (Champion)</option>
                        <option value="ENTP">ENTP (Visionary)</option>
                        <option value="ESTJ">ESTJ (Supervisor)</option>
                        <option value="ESFJ">ESFJ (Provider)</option>
                        <option value="ENFJ">ENFJ (Teacher)</option>
                        <option value="ENTJ">ENTJ (Commander)</option>
                    </select>
                </div>
                <div>
                    <label asp-for="ZodiakSign" class="block text-sm font-medium text-gray-700 mb-1">Zodiac Sign</label>
                    <select asp-for="ZodiakSign" asp-items="Html.GetEnumSelectList<ZodiakSign>()" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3">
                        <option value="" disabled selected>Select (Optional)...</option>
                    </select>
                </div>
            </div>
            <div class="mb-4">
                <label asp-for="Bio" class="block text-sm font-medium text-gray-700 mb-1">Bio</label>
                <textarea asp-for="Bio" rows="4" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 py-2 px-3" placeholder="Tell us a bit about yourself, your hobbies, and interests..."></textarea>
                <span asp-validation-for="Bio" class="text-xs text-red-500"></span>
            </div>
        </div>

        <!-- Step 5: Upload Photos -->
        <div id="step-5" class="step hidden-step">
            <h2 class="text-xl font-semibold text-gray-700 mb-6">Upload Photos</h2>
            <div class="mb-4">
                <label for="images" class="block text-sm font-medium text-gray-700 mb-1">Select Images (up to 6)</label>
                <input type="file" id="images" name="ImageFiles" multiple accept="image/*" class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 transition duration-150 border border-gray-300 rounded-lg cursor-pointer focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                <p class="text-xs text-gray-500 mt-1">Add some photos to show who you are!</p>
            </div>
            <div id="image-preview" class="image-preview-container"></div>
        </div>

        <div class="mt-8 pt-5 border-t border-gray-200">
            <div class="flex justify-between">
                <button type="button" id="prev-btn" class="bg-gray-200 hover:bg-gray-300 text-gray-700 font-medium py-2 px-5 rounded-lg transition duration-200 shadow-sm disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                    Previous
                </button>
                <button type="button" id="next-btn" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-5 rounded-lg transition duration-200 shadow-sm">
                    Next
                </button>
                <button type="submit" id="submit-btn" class="bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-5 rounded-lg transition duration-200 shadow-sm hidden">
                    Complete Profile
                </button>
            </div>
        </div>
    </form>
</div>

<style>
    /* Image preview styling */
    .image-preview-container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: 0.5rem;
    }
    .image-preview-item {
        position: relative;
        width: 80px;
        height: 80px;
        border-radius: 0.375rem;
        overflow: hidden;
        border: 1px solid #e5e7eb;
    }
    .image-preview-item img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    /* Progress bar styling */
    .progress-bar-bg {
        background-color: #e5e7eb;
        border-radius: 9999px;
        height: 8px;
        overflow: hidden;
    }
    .progress-bar-fill {
        background-color: #3b82f6;
        height: 100%;
        transition: width 0.3s ease-in-out;
        border-radius: 9999px;
    }
    /* Hide elements */
    .hidden-step {
        display: none;
    }
</style>

@section Scripts {
    <script>
        const steps = document.querySelectorAll('.step');
        const prevBtn = document.getElementById('prev-btn');
        const nextBtn = document.getElementById('next-btn');
        const submitBtn = document.getElementById('submit-btn');
        const progressBar = document.getElementById('progress-bar');
        const stepIndicator = document.getElementById('step-indicator');
        const imageInput = document.getElementById('images');
        const imagePreviewContainer = document.getElementById('image-preview');

        let currentStep = 0;
        const totalSteps = steps.length;

        function updateButtons() {
            prevBtn.disabled = currentStep === 0;

            if (currentStep === totalSteps - 1) {
                nextBtn.classList.add('hidden');
                submitBtn.classList.remove('hidden');
            } else {
                nextBtn.classList.remove('hidden');
                submitBtn.classList.add('hidden');
            }
        }

        function updateProgress() {
            const progressPercentage = ((currentStep + 1) / totalSteps) * 100;
            progressBar.style.width = `${progressPercentage}%`;
            stepIndicator.textContent = `Step ${currentStep + 1} of ${totalSteps}`;
        }

        function goToStep(stepIndex) {
            steps[currentStep].classList.add('hidden-step');
            steps[stepIndex].classList.remove('hidden-step');
            currentStep = stepIndex;
            updateButtons();
            updateProgress();
        }

        // Event Listeners
        nextBtn.addEventListener('click', () => {
            const currentStepElement = steps[currentStep];
            const requiredInputs = currentStepElement.querySelectorAll('[required]');
            let isValid = true;
            
            requiredInputs.forEach(input => {
                if (!input.value.trim() && input.type !== 'file') {
                     isValid = false;
                     input.classList.add('border-red-500');
                     input.classList.add('focus:border-red-500');
                     input.classList.add('focus:ring-red-500');
                } else if (input.type === 'select-multiple' && input.selectedOptions.length === 0) {
                     isValid = false;
                     input.classList.add('border-red-500');
                     input.classList.add('focus:border-red-500');
                     input.classList.add('focus:ring-red-500');
                }
                else {
                     input.classList.remove('border-red-500');
                     input.classList.remove('focus:border-red-500');
                     input.classList.remove('focus:ring-red-500');
                }
            });

            if (isValid && currentStep < totalSteps - 1) {
                goToStep(currentStep + 1);
            }
        });

        prevBtn.addEventListener('click', () => {
            if (currentStep > 0) {
                 const currentStepElement = steps[currentStep];
                 const inputs = currentStepElement.querySelectorAll('input, select, textarea');
                 inputs.forEach(input => {
                     input.classList.remove('border-red-500');
                     input.classList.remove('focus:border-red-500');
                     input.classList.remove('focus:ring-red-500');
                 });
                goToStep(currentStep - 1);
            }
        });

        // Image Preview Logic
        imageInput.addEventListener('change', (event) => {
            imagePreviewContainer.innerHTML = '';
            const files = event.target.files;
            const maxFiles = 6;

            if (files.length > maxFiles) {
                 alert(`You can only upload a maximum of ${maxFiles} images.`);
                 imageInput.value = '';
                 return;
            }

            for (let i = 0; i < files.length && i < maxFiles; i++) {
                const file = files[i];
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const previewItem = document.createElement('div');
                        previewItem.classList.add('image-preview-item');
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.alt = 'Image preview';
                        previewItem.appendChild(img);
                        imagePreviewContainer.appendChild(previewItem);
                    }
                    reader.readAsDataURL(file);
                }
            }
        });

        // Initialize
        updateButtons();
        updateProgress();
    </script>
}